<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Alexey Smirnov</title>
    <link>https://smirnov-am.github.io/tags/security/</link>
    <description>Recent content in Security on Alexey Smirnov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Alexey Smirnov 2021</copyright>
    <lastBuildDate>Wed, 11 Jul 2018 15:26:00 +0000</lastBuildDate><atom:link href="https://smirnov-am.github.io/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Securing Flask web applications</title>
      <link>https://smirnov-am.github.io/securing-flask-web-applications/</link>
      <pubDate>Wed, 11 Jul 2018 15:26:00 +0000</pubDate>
      
      <guid>https://smirnov-am.github.io/securing-flask-web-applications/</guid>
      <description>In this post I&amp;rsquo;d like to investigate security mechanisms available in Flask. I&amp;rsquo;ll go through different types of possible vulnerabilities and the way they can be mitigated.
XSS Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. source
Exploit Consider a form asking for a user input.
&amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;/&amp;#34;&amp;gt;  &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;tweet&amp;#34;&amp;gt;&amp;lt;br&amp;gt;  &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt; &amp;lt;/form&amp;gt; And a template to show tweets by other users where user input from above form passed unprocessed:</description>
    </item>
    
  </channel>
</rss>
